[tool.poetry]
name = "simpml"
version = "0.1"  # TODO: use poetry-dynamic-versioning
description = "SimpML is an open-source, no/low-code machine learning library in Python that simplifies and automates machine learning workflows. With SimpML, you can quickly build your desired machine learning pipeline with just a few lines of code, drastically reducing your time-to-model."
authors = ["National Instruments"]
maintainers = [
    "Miriam Horovicz <miriam.horovicz@ni.com>",
    "Roni Goldschmidt <roni.goldschmidt@ni.com>",
    "Sergey Kizunov <sergey.kizunov@ni.com>",
]
keywords = ["simpml", "nisimpml"]
license = "Proprietary"  # TODO: Revisit license
readme = "README.md"
include = [
    "LICENSE.txt",
]
packages = [{ include = "simpml" }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: Jupyter",
    "Intended Audience :: Developers",
    "Intended Audience :: Manufacturing",
    "Intended Audience :: Science/Research",
    "License :: Other/Proprietary License",  # TODO: Revisit license
    # "License :: OSI Approved :: MIT License",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Adaptive Technologies",
    "Topic :: Scientific/Engineering",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
# TODO: Relax dependencies to allow version ranges.
python              = ">=3.8.1,<3.12"
alembic             = "1.11.1"
combo               = "0.1.3"
dill                = "^0.3.7"
dtreeviz            = "2.2.2"
fastai              = "2.7.12"
feature-engine      = "1.6.1"
imbalanced-learn    = "0.11.0"
importlib-metadata  = "6.8.0"
ipython             = "8.12.2"
ipywidgets          = "8.0.7"
joblib              = "1.3.1"
lightgbm            = "4.0.0"
matplotlib          = "3.7.2"
methodtools         = "0.4.7"
mlflow              = "2.5.0"
numpy               = "1.23.5"
opencv-python       = "4.8.0.74"
openpyxl            = "3.1.2"
optuna              = "3.2.0"
packaging           = "23.1"
pandas              = "2.0.3"
patsy               = "0.5.3"
plotly              = "5.15.0"
pydataset           = "0.2.0"
pyod                = "1.1.0"
scikit-learn        = "1.3.0"
seaborn             = "0.12.2"
shap                = "0.42.1"
statsmodels         = "0.14.0"
termcolor           = "2.3.0"
tsfresh             = "0.20.1"
typing_extensions   = "4.7.1"
xgboost             = "1.7.6"
xlrd                = "2.0.1"
ydata-profiling     = "4.3.2"

[tool.poetry.group.dev.dependencies]
black               = "^23.7.0"
flake8              = "^6.1.0"
flake8-bugbear      = "^23.7.10"
flake8-builtins     = "^2.1.0"
flake8-comprehensions = "^3.14.0"
flake8-docstrings   = "^1.7.0"
flake8-import-order = "^0.18.2"
isort               = "^5.12.0"
mypy                = "^1.5.1"
pep8-naming         = "^0.13.3"
poethepoet          = "^0.21.1"
pytest              = "^7.4.0"
pytest-cov          = "^4.1.0"
pytest-dependency   = "^0.5.1"
types-termcolor     = "^1.1.6.2"

[tool.poetry.group.docs.dependencies]
docutils                 = "0.18.1"
GitPython                = "3.1.32"
nbsphinx                 = "0.9.2"
pydata-sphinx-theme      = "0.13.3"
sphinx                   = "6.2.1"
sphinxcontrib-jquery     = "4.1"
sphinx_autodoc_typehints = "1.23.0"
sphinx_rtd_size          = "0.2.0"
sphinx_rtd_theme         = "1.2.2"

[tool.poe.tasks]
test    = "pytest tests --junitxml=test_results/test-results.xml"
check   = "black --check simpml tests"
format  = "black simpml tests"
lint    = "flake8 simpml tests"
types   = "mypy simpml tests"
isort   = "isort simpml tests"

[tool.poe.tasks.docs]
control.expr = "sys.platform"

  [[tool.poe.tasks.docs.switch]]
  case = "win32"
  cmd  = ".\\docs\\build.bat"

  [[tool.poe.tasks.docs.switch]]
  cmd  = "./docs/build.sh"

[tool.pytest.ini_options]
addopts = "--strict-markers"
markers = [
    "unit: mark a test as a unit test",
    "integration: mark a test as an integration test",
    "slow: mark a test as a slow test",
    "focus: focus a specific test during development",
]

[tool.black]
line-length = 100

[tool.mypy]
python_version = "3.8"
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators= true
ignore_missing_imports = true
strict_equality = true

[tool.isort]
py_version = 38
profile = "black"
line_length = 100
combine_as_imports = true
case_sensitive = false
order_by_type = false
reverse_relative = true

[tool.semantic_release]
branch        = "main"
version_toml  = ["pyproject.toml:tool.poetry.version"]
build_command = "poetry build"

[build-system]
requires      = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
